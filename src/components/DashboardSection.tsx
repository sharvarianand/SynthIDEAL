import { useState } from "react";
import { Send, Upload, Loader2 } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import ResponsiveCard from "./ResponsiveCard";
import { useNavigate } from "react-router-dom";

export default function DashboardSection() {
  const [inputText, setInputText] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [results, setResults] = useState<Array<{
    id: number;
    content: string;
    isAIGenerated: boolean;
  }> | null>(null);
  const navigate = useNavigate();

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!inputText.trim()) return;
    
    navigate('/login');
  };

  const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {
    navigate('/login');
  };

  return (
    <div className="py-16 container px-4">
      <div className="max-w-4xl mx-auto">
        <div className="text-center mb-10">
          <h2 className="text-3xl font-bold font-heading mb-4">Try Our AI Detection</h2>
          <p className="text-muted-foreground max-w-2xl mx-auto">
            Enter text or upload a file to analyze whether the content was generated by AI or 
            written by a human.
          </p>
        </div>

        <form onSubmit={handleSubmit} className="space-y-6">
          <div className="relative">
            <Textarea
              placeholder="Enter text to analyze for AI watermarks..."
              className="min-h-[150px] resize-y"
              value={inputText}
              onChange={(e) => setInputText(e.target.value)}
            />
          </div>

          <div className="flex flex-col sm:flex-row gap-4">
            <Button
              type="submit"
              disabled={isLoading || !inputText.trim()}
              className="flex-1"
            >
              {isLoading && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
              {!isLoading && <Send className="mr-2 h-4 w-4" />}
              Analyze Text
            </Button>
            
            <div className="relative flex-1">
              <Input
                type="file"
                className="hidden"
                id="file-upload"
                onChange={handleFileUpload}
                accept="image/*,.pdf,.doc,.docx,.txt"
              />
              <label htmlFor="file-upload">
                <Button
                  type="button"
                  variant="outline"
                  className="w-full"
                  onClick={() => document.getElementById("file-upload")?.click()}
                >
                  <Upload className="mr-2 h-4 w-4" />
                  Upload File
                </Button>
              </label>
            </div>
          </div>
        </form>

        {isLoading && (
          <div className="flex justify-center items-center py-16">
            <div className="flex flex-col items-center space-y-4">
              <div className="relative w-16 h-16">
                <div className="absolute inset-0 rounded-full border-4 border-primary/20 border-t-primary animate-spin" />
              </div>
              <p className="text-muted-foreground">Analyzing content...</p>
            </div>
          </div>
        )}

        {results && !isLoading && (
          <div className="mt-12">
            <h3 className="text-xl font-medium mb-6">Analysis Results</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {results.map((result) => (
                <ResponsiveCard
                  key={result.id}
                  isAIGenerated={result.isAIGenerated}
                  isHumanContent={!result.isAIGenerated}
                >
                  <div className="p-6">
                    <p>{result.content}</p>
                    <div className="mt-4 pt-4 border-t flex justify-between items-center">
                      <div className="flex items-center space-x-2">
                        <div className={`w-3 h-3 rounded-full ${result.isAIGenerated ? 'bg-aiGenerated' : 'bg-humanContent'}`}></div>
                        <span className="text-sm font-medium">
                          {result.isAIGenerated ? 'AI Generated' : 'Human Content'}
                        </span>
                      </div>
                      <div className="text-sm text-muted-foreground">
                        Confidence: {result.isAIGenerated ? '94%' : '87%'}
                      </div>
                    </div>
                  </div>
                </ResponsiveCard>
              ))}
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
